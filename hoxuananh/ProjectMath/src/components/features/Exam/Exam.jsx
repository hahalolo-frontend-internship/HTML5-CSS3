import {
  Card,
  CardActions,
  CardContent,
  makeStyles,
  Typography
} from "@material-ui/core";
import ArrowBackIosIcon from "@material-ui/icons/ArrowBackIos";
import ArrowForwardIosIcon from "@material-ui/icons/ArrowForwardIos";
import React, { useState } from "react";
import { Link } from "react-router-dom";
import tutorial_img from "../../../image/exam.png";
import time from "../../../image/Group8307.png";
import question from "../../../image/question.png";
import score from "../../../image/target.png";
import rank from "../../../image/trophy.png";
import ButtonV2 from "../../common/button/ButtonV2";
import { format_second_to_minutes } from "../../helpers";
import "./style.scss";

const useStyles = makeStyles({
  root: {
    maxWidth: 275,
  },
  title: {
    fontSize: 20,
  },
});
export default function Exam(props) {
  const [tutorial, setTutorial] = useState(false);
  const classes = useStyles();
  let arrUser = props.listUser.sort((a, b) =>
    b.point - a.point === 0 ? a.time - b.time : b.point - a.point
  );
  function resetData(){
    props.setListResult([]);
    props.setendResult(false);

  }
  return (
    <div className="header__content exam">
      <div className="exam__content">
        <div className="exam__content_left">
          <div className="item">Study for MCT</div>
          <div className="item">Study for MCT</div>
          <div className="item">Study for MCT</div>
          <div className="item">Study for MCT</div>
        </div>
        <div className="exam__content_right">
          {props.endResult ? (
            <>
              <div className="result">
                <div className="result-item result-rank">
                  <img src={rank} alt="" />
                  <table>
                    <tbody>
                      <tr>
                        <th>T√™n</th>
                        <th>ƒêi·ªÉm</th>
                        <th>Th·ªùi gian</th>
                      </tr>
                      {arrUser.map(
                        (item, index) =>
                          index < 7 &&
                          item.point >= 7 && (
                            <tr key={index}>
                              <td>
                                ü•á{item.firstName} {item.lastName}
                              </td>
                              <td>{item.point}</td>
                              <td>{format_second_to_minutes(item.time)}</td>
                            </tr>
                          )
                      )}
                    </tbody>
                  </table>
                </div>
                <div className="result-item result-score">
                  <img src={score} alt="" />
                  <h1 className="text-result">
                    {props.showResult}/{props.data.length}
                    <div className="view-result">
                      <div className="main__ratings_header">
                        <p>ƒê√°p √°n</p>
                      </div>
                      <div className="view-result__number">
                        {props.data.map((item, index) => (
                          <span
                            key={index}
                            onClick={() => console.log(item.id)}
                            className={`view-result__number-box 
                            ${
                              props.listResult.filter(
                                (i) =>
                                  i.result_choise === item.result_true &&
                                  i.id_question === item.id
                              ).length !== 0
                                ? "success2"
                                : "fail2"
                            }
                              `}
                          >
                            {index + 1}
                          </span>
                        ))}
                      </div>
                    </div>
                  </h1>
                </div>
                <div className="result-item result-question">
                  <img src={question} alt="" />
                  <h1 className="text-result">{props.showResult * 1} </h1>
                </div>
                <div className="result-item result-time">
                  <img src={time} alt="" />
                  <h1 className="text-result">
                    {format_second_to_minutes(2700 - props.time)}
                  </h1>
                </div>
              </div>
              <ButtonV2
                width="120px"
                margin="20px 0"
                padding="10px 10px"
                background="rgb(167, 86, 252)"
                backgroundColor="#B8B5FF"
                borderRadius="100px"
                onClick={resetData }
              >
                <ArrowBackIosIcon />
                Quay l·∫°i
              </ButtonV2>
            </>
          ) : tutorial ? (
            <div className="tutorial">
              <div className="tutorial__img">
                <img width="509px" height="474px" src={tutorial_img} alt="" />
              </div>
              <div className="tutorial__content">
                <h1>B√†i Ki·ªÉm Tra To√°n (10 c√¢u h·ªèi)</h1>
                <h2>N·ªôi Quy v√† Quy ƒê·ªãnh</h2>
                <ul className="tutorial__content_item">
                  <li>
                    Th√≠ sinh ph·∫£i ho√†n th√†nh 10 c√¢u h·ªèi ƒë∆°n trong khung th·ªùi
                    gian 45 ph√∫t
                  </li>
                  <li>
                    Kh√¥ng c√≥ t√†i li·ªáu ƒë∆∞·ª£c ph√©p cho ƒë√°nh gi√° n√†y. Th√≠ sinh ƒë∆∞·ª£c
                    cung c·∫•p b·∫£ng c√≥ th·ªÉ t·∫©y x√≥a v√† b√∫t d·∫°. M·ªôt m√°y t√≠nh ƒë∆∞·ª£c
                    cung c·∫•p tr√™n m√†n h√¨nh. Xin l∆∞u √Ω r·∫±ng th√≠ sinh kh√¥ng ƒë∆∞·ª£c
                    ph√©p l·∫•y b·∫•t k·ª≥ t√†i li·ªáu n√†o kh·ªèi trung t√¢m kh·∫£o th√≠.
                  </li>
                  <li>
                    M·ªói c√¢u tr·∫£ l·ªùi ƒë√∫ng s·∫Ω nh·∫≠n ƒë∆∞·ª£c m·ªôt ƒëi·ªÉm. Nhi·ªÅu c√¢u tr·∫£
                    l·ªùi kh√¥ng ƒë∆∞·ª£c t√≠nh
                  </li>
                  <li>
                    Th√≠ sinh s·∫Ω kh√¥ng th·ªÉ t·∫°m d·ª´ng phi√™n v√† quay l·∫°i. Sau khi
                    b·∫Øt ƒë·∫ßu, ƒë·ªìng h·ªì s·∫Ω ti·∫øp t·ª•c ch·∫°y ngay c·∫£ khi b·∫°n ngh·ªâ ng∆°i.
                  </li>
                </ul>
                <div className="tutorial__button">
                  <ButtonV2
                    width="150px"
                    margin="unset"
                    padding="10px 10px"
                    background="rgb(167, 86, 252)"
                    backgroundColor="#B8B5FF"
                    borderRadius="100px"
                    onClick={() => setTutorial(false)}
                  >
                    <ArrowBackIosIcon />
                    Quay l·∫°i
                  </ButtonV2>
                  <Link to="/question">
                    <ButtonV2
                      width="150px"
                      margin="unset"
                      padding="10px 10px"
                      background="rgb(167, 86, 252)"
                      backgroundColor="#B8B5FF"
                      borderRadius="100px"
                    >
                      B·∫Øt ƒë·∫ßu thi
                      <ArrowForwardIosIcon />
                    </ButtonV2>
                  </Link>
                </div>
              </div>
            </div>
          ) : (
            <Card className={classes.root}>
              <CardContent>
                <Typography className={classes.title}>
                  ƒê·ªÅ ki·ªÉm tra 1 ti·∫øt
                </Typography>
                <Typography variant="body2" component="p">
                  G·ªìm 10 c√¢u
                  <br />
                  Th·ªùi gian 45 ph√∫t
                </Typography>
              </CardContent>
              <CardActions>
                <ButtonV2
                  margin="unset"
                  width="100px"
                  padding="5px"
                  background="rgb(167, 86, 252)"
                  backgroundColor="#B8B5FF"
                  onClick={() => setTutorial(true)}
                >
                  B·∫Øt ƒë·∫ßu
                </ButtonV2>
              </CardActions>
            </Card>
          )}
        </div>
      </div>
    </div>
  );
}
